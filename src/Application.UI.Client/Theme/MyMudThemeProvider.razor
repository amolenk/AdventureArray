@using AdventureArray.Application.UI.Model.Gebruiker
@using AdventureArray.Application.UI.Client.Features.Gebruikersvoorkeuren.Models

<CascadingValue Value="false" Name="UsePopoverProvider">
    <MudThemeProvider @ref="_themeProvider" @bind-IsDarkMode="_isAppDarkMode" />
</CascadingValue>

@code{

    private MudThemeProvider _themeProvider = null!;

    private bool _isAppDarkMode = false;
    private bool _isSystemDarkMode = false;

    [CascadingParameter] public Gebruikersvoorkeuren Gebruikersvoorkeuren { get; set; } = null!;

    protected override void OnParametersSet()
    {
        switch (Gebruikersvoorkeuren.DarkMode)
        {
            case DarkModeSetting.Light:
                _isAppDarkMode = false;
                break;
            case DarkModeSetting.Dark:
                _isAppDarkMode = true;
                break;
            case DarkModeSetting.Auto:
            default:
                _isAppDarkMode = _isSystemDarkMode;
                break;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get- and WatchSystemPreference both require JavaScript and can only be run after rendering.
            _isSystemDarkMode = await _themeProvider.GetSystemPreference();
            await _themeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
        }
    }

    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        _isSystemDarkMode = newValue;
        if (Gebruikersvoorkeuren.DarkMode == DarkModeSetting.Auto)
        {
            _isAppDarkMode = _isSystemDarkMode;
            await InvokeAsync(StateHasChanged);
        }
    }

}
