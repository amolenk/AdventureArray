<MudButton Disabled="@(_loading || Disabled)" OnClick="HandleClick" Variant="@Variant" Color="@Color" Class="mdl-button">
    @if (_loading)
    {
        <MudProgressLinear Color="@Color" Indeterminate="true" Style="position: absolute; top: 0px; width: calc(100% + 3rem); margin-left: -1rem;"/>
    }
    <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
        @if (Destructive)
        {
            <MudIcon Icon="@Icons.Material.Filled.ErrorOutline" Size="Size.Small"></MudIcon>
        }
        @ChildContent
    </MudStack>
</MudButton>

@code {
    [Parameter] [EditorRequired] public Func<Task> OnClick { get; set; } = null!;
    [Parameter] public RenderFragment ChildContent { get; set; } = null!;
    [Parameter] public Color Color { get; set; } = Color.Primary;
    [Parameter] public Variant Variant { get; set; } = Variant.Filled;
    [Parameter] public bool Destructive { get; set; }
    [Parameter] public bool Disabled { get; set; }

    private bool _loading = false;

    protected override void OnInitialized()
    {
        if (Destructive)
        {
            Color = Color.Error;
        }
    }

    private async Task HandleClick()
    {
        _loading = true;
        await OnClick.Invoke();
        _loading = false;
    }

}
